---
layout: post
title: "프로그래머스 기초트레이닝 Day25-3"
date: 2024-02-22 12:20:00 +0900
categories: Javascript
---

### 정사각형으로 만들기😀

이차원 정수 배열 arr이 매개변수로 주어집니다.<br>
arr의 행의 수가 더 많다면 열의 수가 행의 수와 같아지도록 각 행의 끝에 0을 추가하고,<br>
열의 수가 더 많다면 행의 수가 열의 수와 같아지도록 각 열의 끝에 0을 추가한 이차원 배열을 return 하는 solution 함수를 작성해 주세요.<br>

※ 제한 사항<br>
1 ≤ arr의 길이 ≤ 100<br>
1 ≤ arr의 원소의 길이 ≤ 100<br>
arr의 모든 원소의 길이는 같습니다.<br>
1 ≤ arr의 원소의 원소 ≤ 1,000<br>

입출력 <br>

|                               arr                                |                                    result                                    |
| :--------------------------------------------------------------: | :--------------------------------------------------------------------------: |
| [[572, 22, 37], [287, 726, 384], [85, 137, 292], [487, 13, 876]] | [[572, 22, 37, 0], [287, 726, 384, 0], [85, 137, 292, 0], [487, 13, 876, 0]] |
|             [[57, 192, 534, 2], [9, 345, 192, 999]]              |     [[57, 192, 534, 2], [9, 345, 192, 999], [0, 0, 0, 0], [0, 0, 0, 0]]      |
|                         [[1, 2], [3, 4]]                         |                               [[1, 2], [3, 4]]                               |

<br>

```javascript
function solution(arr) {
  let answer = [...arr];
  const rows = arr.length;
  const columns = arr[0].length;

  if (rows > columns) {
    for (let i = 0; i < rows; i++) {
      for (let j = 0; j < rows - columns; j++) {
        answer[i].push(0);
      }
      console.log(111);
    }
  }

  if (rows < columns) {
    for (let i = 0; i < columns - rows; i++) {
      answer.push(Array(columns).fill(0));
    }
  }

  console.log("rows / columns: ", rows, columns);

  return answer;
}
```

let answer = [...arr];: 입력 배열 arr을 복사하여 answer에 저장합니다.<br>

const rows = arr.length; 및 const columns = arr[0].length;: 원본 배열의 행과 열의 개수를 저장합니다.<br>

if (rows > columns) { ... }: 행의 개수가 열의 개수보다 많은 경우 실행됩니다.<br>

for (let i = 0; i < rows; i++) { ... }: 각 행에 대해서 반복합니다.<br>
for (let j = 0; j < rows - columns; j++) { answer[i].push(0); }: 부족한 열의 개수만큼 0을 추가하여 행을 정사각형으로 만듭니다.<br>
if (rows < columns) { ... }: 열의 개수가 행의 개수보다 많은 경우 실행됩니다.<br>

for (let i = 0; i < columns - rows; i++) { answer.push(Array(columns).fill(0)); }: 부족한 행의 개수만큼 0으로 채워진 배열을 추가하여 열을 정사각형으로 만듭니다.<br>
console.log("rows / columns: ", rows, columns);: 행과 열의 개수를 출력합니다.<br>

return answer;: 최종적으로 정사각형으로 만들어진 2차원 배열을 반환합니다.<br>

코드에서는 주어진 배열이 이미 정사각형일 경우에는 아무런 조작을 하지 않습니다.<br>
