---
layout: post
title: "프로그래머스 기초트레이닝 Day9-2"
date: 2024-02-06 11:30:00 +0900
categories: Javascript
---

### 부분 문자열 이어 붙여 문자열 만들기 😀

길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다.<br>
parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다.<br>
각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.<br>

※ 제한 사항<br>
1 ≤ my_strings의 길이 = parts의 길이 ≤ 100<br>
1 ≤ my_strings의 원소의 길이 ≤ 100<br>
parts[i]를 [s, e]라 할 때, 다음을 만족합니다.<br>
0 ≤ s ≤ e < my_strings[i]의 길이<br>

입출력 <br>

|my_strings|parts|result|
|:---:|:---:|:---:|
|["progressive", "hamburger", "hammer", "ahocorasick"]|[[0, 4], [1, 2], [3, 5], [7, 7]]|"programmers"|



<br>

```javascript
function solution(my_strings, parts) {
    return parts.reduce((acc, cur, idx) => {
        const [s, e] = cur;

        acc += my_strings[idx].slice(s, e + 1);

        return acc;
    }, '');
}
```
reduce 함수 사용: parts.reduce((acc, cur, idx) => {...}, ''); 부분에서 reduce 함수를 활용합니다.<br>
acc는 누적된 결과를 나타내며, 초기값은 빈 문자열('')입니다.<br>

부분 문자열 추출: cur은 현재 순회 중인 parts 배열의 요소입니다. 구조 분해 할당을 사용하여 cur 배열의 첫 번째 요소를 s, 두 번째 요소를 e로 가져옵니다.<br>

현재 문자열에서 부분 문자열 추출: my_strings 배열에서 현재 인덱스 idx에 해당하는 문자열을 가져옵니다. <br>
그리고 slice 메서드를 사용하여 해당 문자열에서 부분 문자열을 추출합니다. 추출한 부분 문자열은 acc에 더해집니다.<br>

acc = my_strings["progressive"].slice(0,5) = "progr"<br>
acc = my_strings["hamburger"].slice(1,3) = 	"am"<br>
acc = my_strings["hammer"].slice(3,6) = "mer"<br>
acc = my_strings["ahocorasick"].slice(7,8) = "s"<br>

각 부분 문자열을 순서대로 이어 붙인 문자열은 "programmers"입니다. 따라서 "programmers"를 return 합니다.<br>
